{"version":3,"sources":["assets/images/avatar.png","assets/images/satellite.png","assets/images/blockchain.png","components/Footer.js","components/Hero.js","components/Card.js","components/Carousel.js","pages/HomePage.js","pages/AboutPage.js","pages/ContactPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","Container","fluid","Row","Col","md","sm","Hero","props","Jumbotron","title","subTitle","text","Card","src","item","imgSrc","alt","Carousel","handlerCardClick","id","card","items","state","selected","forEach","setState","makeItems","map","onClick","e","key","avatar","link","satellite","blockchain","this","React","Component","HomePage","AboutPage","ContactPage","App","headerLinks","path","home","about","contact","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","to","exact","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.59971219.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.07f40cca.png\";","module.exports = __webpack_public_path__ + \"static/media/satellite.0b725170.png\";","module.exports = __webpack_public_path__ + \"static/media/blockchain.17b30729.png\";","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\nfunction Footer() {\n\n    return (\n      <footer className=\"mt-5\">\n        <Container fluid={true}>\n          <Row className=\"border-top justify-content-between p-3\">\n            <Col className=\"p-0\" md={3} sm={12}>\n              rivermoon\n            </Col>\n            <Col className=\"p-0 d-flex justify-content-end\" md={3}>\n              Site made by Mauricio\n            </Col>\n\n          </Row>\n        </Container>\n      </footer>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction Hero(props) {\n  return (\n    <Jumbotron className=\"bg-transparent jumbotron-fluid p-0\" >\n      <Container fluid={true}>\n        <Row className=\"justify-content-center py-5\">\n          <Col md={8} sm={12}>\n            { props.title && <h1 className=\"display-1 font-weight-bolder\" >{props.title}</h1> }\n            { props.subTitle && <h3 className=\"display-4 font-weight-light\">{props.subTitle}</h3> }\n            { props.text && <h3 className=\"lead font-weight-light\" >{props.text}</h3> }\n          </Col>\n        </Row>\n      </Container>\n    </Jumbotron>\n  );\n}\n\nexport default Hero;\n","import React from 'react';\n\nfunction Card(props) {\n\n  return (\n    <div>\n      <img className=\"\" src={props.item.imgSrc} alt={props.item.imgSrc} />\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from '../components/Card';\nimport avatar from '../assets/images/avatar.png';\nimport satellite from '../assets/images/satellite.png';\nimport blockchain from '../assets/images/blockchain.png';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\nclass Carousel extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      items: [\n        {\n          id:0,\n          title: 'Dev Grub',\n          subTitle: 'Cookbook for Developers',\n          imgSrc: avatar,\n          link: 'https://devgrub.com',\n          selected: false\n        },\n        {\n          id:1,\n          title: 'rivermoon',\n          subTitle: 'Youtube Channel',\n          imgSrc: satellite,\n          link: 'https://youtube.com',\n          selected: false\n        },\n        {\n          id:2,\n          title: 'Deverest',\n          subTitle: 'Social Media for Developers',\n          imgSrc: blockchain,\n          link: 'https://github.com',\n          selected: false\n        }\n      ]\n    }\n  }\n\n  handlerCardClick = (id, card) => {\n    let items = [...this.state.items];\n\n    items[id].selected = items[id].selected ? false : true;\n    items.forEach(item => {\n      if(item.id !== id){\n        item.selected = false;\n      }\n    });\n\n    this.setState({\n      items\n    });\n\n  }\n\n  makeItems = (items) => {\n    return items.map(item => {\n      return <Card item={item} onClick={(e => this.handlerCardClick(item.id, e))} key={item.id} />\n    })\n  }\n\n\n  render() {\n    return(\n      <Container fluid={true}>\n        <Row className=\"justify-content-around\">\n          {this.makeItems(this.state.items)}\n        </Row>\n\n      </Container>\n    );\n  }\n\n}\n\nexport default Carousel;\n","import React from 'react';\nimport Hero from '../components/Hero'\nimport Carousel from '../components/Carousel'\n\nfunction HomePage(props) {\n  return (\n    <div>\n      <Hero title={props.title} subTitle={props.subTitle} text={props.text} />\n      <Carousel />\n\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\n\nfunction AboutPage(props) {\n  return (\n    <p>AboutPage Works!</p>\n  );\n}\n\nexport default AboutPage;\n","import React from 'react';\n\nfunction ContactPage(props) {\n  return (\n    <p>ContactPage Works!</p>\n  );\n}\n\nexport default ContactPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport './App.css';\n\n/* Components */\nimport Footer from './components/Footer';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ContactPage from './pages/ContactPage';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"Rivermoon\",\n      headerLinks: [\n        { title:'Home', path:'/' },\n        {title:'About', path:'/about'},\n        {title:'Contact', path:'/contact'}\n      ],\n      home: {\n        title: \"Keep Pushing!\",\n        subTitle: \"Projects\",\n        text: \"Check out my projects!\"\n      },\n      about: {\n        title: \"About\",\n      },\n      contact: {\n        title: \"Contact\",\n      }\n\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <Container className=\"p-0\" fluid={true}>\n          <Navbar className=\"border-bottom\" bg=\"transparent\" expand=\"lg\">\n\n            <Navbar.Brand>rivermoon</Navbar.Brand>\n            <Navbar.Toggle className=\"ml-auto\" aria-controls=\"navbar-toggle\" />\n            <Navbar.Collapse id=\"navbar-toggle\">\n\n              <Nav className=\"ml-auto\">\n                <Link className=\"nav-link\" to=\"/\">Home</Link>\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\n                <Link className=\"nav-link\" to=\"/contact\">Contact</Link>\n\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n\n          <Route path=\"/\" exact render={() => <HomePage title={this.state.home.title} subTitle={this.state.home.subTitle} text={this.state.home.text} /> } />\n          <Route path=\"/about\" exact render={() => <AboutPage title={this.state.about.title}  /> } />\n          <Route path=\"/contact\" exact render={() => <ContactPage title={this.state.contact.title} /> } />\n\n          <Footer />\n\n        </Container>\n\n      </Router>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}